type Query { #aqui van todos los queries 
getUsers(is_active:Boolean):[User!]!
getUser(id:ID,email:String):User
getHouses(is_active:Boolean,
              tag:String,
              city:String,
              date:String
              ): [House]
getHouse(id:ID!, created_by:String):House
login(email:String,password:String):String

}

type Mutation {#aqui van todos los mutations y modificaciones en la base de datos o la app
    createUser(data:Useradd!):User!
    updateUser(id:ID!,data:Userupdate):User!
    deleteUser(id:ID!):User!
    createHouse(data:Houseadd):House!
    updateHouse(id:ID!, data:Houseupdate):House!
    deleteHouse(id:ID!):House

}

input Houseadd {
  title:String!
  description:String
  date:String
  address:Addressadd
  created_by:String
  banner:String
  tags:[String]
}

input Addressadd {
    street:String
    city:String
    number:String
    country:String
    state:String
    zip:String
    late:Float
    long:Float
}

input Houseupdate {
  title:String
  description:String
  address:Addressadd
  date:String
  banner:String
  tags:[String]
}

input Userupdate{
  first_name:String
  last_name:String
  gender:GENDER
  birth_date:String
  photo:String
}

input Useradd{#es para escritura
  first_name:String!
  last_name:String!
  email:String!
  password:String!
  birth_date:String 
  gender:GENDER 
  photo:String
}

type User {#ellos van a mapear la base de datos de mongoose, solo son de lectura 
  _id:ID!
  first_name:String
  last_name:String
  email:String
  birth_date:String 
  gender:GENDER
  password:String 
  photo:String
  houses_create:[House]
  houses_asisstants:[House]
  is_active:Boolean
  createdAt:String
  updatedAt:String
 
}

enum GENDER {
    M
    F 
    O
}

type House {
    _id:ID!
    title:String
    description:String
    date:Float
    address:Address
    assistants:[User]
    created_by:User
    banner:String
    tags:[String]
    is_active:Boolean
    createdAt:String
    updatedAt:String

}

type Address {
    street:String
    city:String
    number:String
    country:String
    state:String
    zip:String
    late:Float
    long:Float
}
